(self.webpackChunkdocuments=self.webpackChunkdocuments||[]).push([[343],{9581:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-45b8d955",path:"/components/func.html",title:"功能扩展",lang:"zh-CN",frontmatter:{title:"功能扩展"},excerpt:"",headers:[{level:2,title:"func.model模具相关",slug:"func-model模具相关",children:[{level:3,title:"将dict数据写到ORM模具",slug:"将dict数据写到orm模具",children:[]},{level:3,title:"将ORM实例数据转换成json",slug:"将orm实例数据转换成json",children:[]},{level:3,title:"将ORM实例列表转换成json列表",slug:"将orm实例列表转换成json列表",children:[]},{level:3,title:"loads和dumps使用例子",slug:"loads和dumps使用例子",children:[]}]}],filePathRelative:"components/func.md",git:{updatedTime:1624630892e3}}},2869:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h2 id="func-model模具相关"><a class="header-anchor" href="#func-model模具相关">#</a> func.model模具相关</h2><h3 id="将dict数据写到orm模具"><a class="header-anchor" href="#将dict数据写到orm模具">#</a> 将dict数据写到ORM模具</h3><div class="custom-container tip"><p class="custom-container-title">func.model.loads</p><p>loads方法接受两个参数：</p><ol><li>model_obj ORM模具对象实例</li><li>dict_data 需要更新的dict数据</li></ol></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>func<span class="token punctuation">.</span>model<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>user<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&#39;nickname&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;新昵称&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;email&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;aa@gmail.com&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>上面这句代码等同于下面这一段</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>user<span class="token punctuation">.</span>nickname <span class="token operator">=</span> <span class="token string">&#39;新昵称&#39;</span>\nuser<span class="token punctuation">.</span>email <span class="token operator">=</span> <span class="token string">&#39;aa@gmail.com&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这个用来给post更新方法，非常的便捷。</p><h3 id="将orm实例数据转换成json"><a class="header-anchor" href="#将orm实例数据转换成json">#</a> 将ORM实例数据转换成json</h3><div class="custom-container tip"><p class="custom-container-title">func.model.dumps</p><p>dumps 方法接收参数如下：</p><ol><li>model_obj 数据模具</li><li>exclude 不处理列表中的字段 <blockquote><p>默认值 exclude = [&#39;_sa_instance_state&#39;, &#39;password_hash&#39;, &#39;_state&#39;, &#39;password&#39;] 默认不处理输出密码字段</p></blockquote></li><li>include 只输出列表中的字段</li><li>string 直接转换成string格式</li><li>func 默认输出模具类中的属性方法</li></ol></div><h3 id="将orm实例列表转换成json列表"><a class="header-anchor" href="#将orm实例列表转换成json列表">#</a> 将ORM实例列表转换成json列表</h3><div class="custom-container tip"><p class="custom-container-title">func.model.models_to_list</p><p>等同于[func.model.dumps(x) for x in models]</p></div><h3 id="loads和dumps使用例子"><a class="header-anchor" href="#loads和dumps使用例子">#</a> loads和dumps使用例子</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> api_shop <span class="token keyword">import</span> func<span class="token punctuation">,</span>Api\n<span class="token keyword">from</span> models <span class="token keyword">import</span> Users\n<span class="token keyword">class</span> <span class="token class-name">users</span><span class="token punctuation">(</span>Api<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        user <span class="token operator">=</span> Users<span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        ret <span class="token operator">=</span> func<span class="token punctuation">.</span>models<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token comment"># 将ORM的数据转换成json格式，方便前端使用。</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span>ret<span class="token punctuation">}</span>\n    <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        user <span class="token operator">=</span> Users<span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Users<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n        func<span class="token punctuation">.</span>models<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>user<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token comment"># 将data包含的数据附加到user上</span>\n\n        user<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',13),t={render:function(n,s){return p}}}}]);